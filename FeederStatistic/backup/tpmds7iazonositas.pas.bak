unit tpmds7iazonositas;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, LResources, Forms, Controls, Graphics, Dialogs,
  StdCtrls, global, database, Sqlite3DS;

type

  { TfrmTPMDS7i_Azonositas }

  TfrmTPMDS7i_Azonositas = class(TForm)
    btnAzonositas: TButton;
    edtDs7i: TEdit;
    edtUserName: TEdit;
    Label1: TLabel;
    procedure btnAzonositasClick(Sender: TObject);
    procedure edtDs7iKeyPress(Sender: TObject; var Key: char);
    procedure edtWDSzamKeyPress(Sender: TObject; var Key: char);
    procedure FormCloseQuery(Sender: TObject; var CanClose: boolean);
    procedure FormShow(Sender: TObject);
  private
    { private declarations }
  public
    { public declarations }
  end;

var
  frmTPMDS7i_Azonositas: TfrmTPMDS7i_Azonositas;

implementation

uses tpmsetupmain,prevfeederazon, login;

{ TfrmTPMDS7i_Azonositas }

procedure TfrmTPMDS7i_Azonositas.FormShow(Sender: TObject);
begin
  edtUserName.Text := userName;
  edtDs7i.Text := '';
  //edtWDSzam.Text := '';
  edtDs7i.SetFocus;
end;

procedure TfrmTPMDS7i_Azonositas.btnAzonositasClick(Sender: TObject);
var
  myDataset:  TSqlite3Dataset;
  sPrev_Jav:    String;
  iRecCount:    Integer;

begin
  //adatell:
    //ha a bárkód olvasó a nulla helyett ö-t írna be akkor ki kell javítani 0-ra!
    DS7i := StringReplace(edtDs7i.Text,'ö','0',[rfReplaceAll, rfIgnoreCase]);
    ShowMessage(DS7i);

    DS7i := trim(edtDs7i.Text);
    if (IsStrANumber(DS7i) = false) then
    begin
      DS7i := '';
      ShowMessage('A DS7i azonosító csak számot tartalmazhat !');
      edtDs7i.SetFocus;
      exit;
    end ;
    if (DS7i = '') then
    begin
      DS7i := '';
      ShowMessage('Az azonosító megadása kötelező !');
      edtDs7i.SetFocus;
      exit;
		end;

    {
    sTPMSetupWDNum := trim(edtWDSzam.Text);
    if (IsStrANumber(sTPMSetupWDNum) = false) then
    begin
      sTPMSetupWDNum := '';
      ShowMessage('Workday azonosító csak számot tartalmazhat !');
      edtWDSzam.SetFocus;
      exit;
    end ;
    if (sTPMSetupWDNum = '') then
    begin
      ShowMessage('Workday azonosító megadása kötelező !');
      edtWDSzam.SetFocus;
      exit;
		end;
    }

    //feeder_tpm -táblát meg kell nézni hogy nincs-e nyitott munkalap erről a feederről:
    //ha van akkor kiabálni kell!!
    myDataset := dbConnect('feeder_tpm','SELECT * FROM feeder_tpm WHERE tpm_ds7i = "' + DS7i + '" and tpm_lezarva = 0;','id');
    if (myDataset.RecordCount > 0) then
        begin
          sPrev_Jav := '';
          if (myDataset.FieldByName('tpm_preventive').AsInteger = 1) then sPrev_Jav := 'preventívre!';
          if (myDataset.FieldByName('tpm_javitasra').AsInteger = 1) then sPrev_Jav := 'javításra!';
          dbClose(myDataset);
          ShowMessage(DS7i + ' - azonosítóju adagoló már várakozik ' + sPrev_Jav);
          edtDs7i.Text := '';
          DS7i := '';
          edtDs7i.SetFocus;
          Exit;
        end;
    //dbClose(myDataset);

    //Ha még nincs a rendszerben a feeder akkor be kell azonosítani:
    dbUpdate(myDataset,'SELECT * FROM repair WHERE ds7i="' + DS7i + '";');
    iRecCount := myDataset.RecordCount;
    if (iRecCount > 0) then
        begin
          //Már a rendszerben lévő adatok lekérdezése:
          iFeederType := myDataset.FieldByName('r_type').AsInteger;
          iFeederSize := myDataset.FieldByName('size').AsInteger;
        end
    else
        begin
          dbUpdate(myDataset,'SELECT * FROM feeder_tpm WHERE tpm_ds7i="' + DS7i + '";');
          iRecCount := myDataset.RecordCount;
          if (iRecCount > 0) then
              begin
                iFeederType := myDataset.FieldByName('tpm_type').AsInteger;
                iFeederSize := myDataset.FieldByName('tpm_size').AsInteger;
              end;

        end;
    dbClose(myDataset);

		if (iRecCount = 0) then
        begin
          //Még nincs bennt a rendszerben:
          ShowMessage('Az adagoló még nem szerepel az adatbázisban!' + #10 + 'A megjelenő ablakban tudja rögzíteni!');
			  	frmTPMDS7i_Azonositas.Hide;
          frmPreventiveFeederazonositas.Show;
          exit;
        end;


    frmTPMDS7i_Azonositas.Hide;
    frmTPMSetupMain.Show;


end;

procedure TfrmTPMDS7i_Azonositas.edtDs7iKeyPress(Sender: TObject; var Key: char
  );
begin
    if (Key = chr(13)) then frmTPMDS7i_Azonositas.btnAzonositasClick(nil);
end;

procedure TfrmTPMDS7i_Azonositas.edtWDSzamKeyPress(Sender: TObject;
  var Key: char);
begin
    if (Key = chr(13)) then frmTPMDS7i_Azonositas.btnAzonositasClick(nil);
end;

procedure TfrmTPMDS7i_Azonositas.FormCloseQuery(Sender: TObject;
  var CanClose: boolean);
begin
  CanClose := true;
  frmTPMDS7i_Azonositas.Hide;
  frmLogin.Show;
end;

initialization
  {$I tpmds7iazonositas.lrs}

end.

